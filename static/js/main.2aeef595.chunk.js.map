{"version":3,"sources":["components/Robot.module.css","components/Robot.tsx","components/ShoppingCart.tsx","App.tsx","reportWebVitals.ts","index.tsx","App.module.css","components/ShoppingCart.module.css"],"names":["module","exports","Robot","type","price","description","addRobotToShoppingCardList","className","styles","cardContainer","alt","src","onClick","e","ShoppingCart","props","handleClick","console","log","target","currentTarget","nodeName","setState","isOpen","state","total","this","shoppingCardList","forEach","robot","removeRobotFromShoppingCardList","cartContainer","button","length","getTotalPrice","cartDropDown","style","display","map","event","handleRemove","React","Component","App","robotGallery","count","shoppingCartList","fetch","process","then","response","json","data","filter","r","app","appHeader","bind","robotList","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","require","config","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2aeef595.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardContainer\":\"Robot_cardContainer__19gp-\"};","import React from \"react\";\nimport styles from './Robot.module.css'\nimport {Robot as RobotInterface} from \"../App\";\n\ninterface RobotProps {\n  type: string;\n  price: number;\n  description: string;\n  addRobotToShoppingCardList: (RobotInterface) => void\n}\n\nconst Robot: React.FC<RobotProps> = ({ type, price, description, addRobotToShoppingCardList }) => {\n\n  function handleClick(event, robot: RobotProps){\n    // this.props.addRobotToShoppingCardList(robot)\n  }\n\n  return (\n    <div className={styles.cardContainer}>\n      <img alt=\"robot\" src={`https://robohash.org/${type}`} />\n      <h2>{type}</h2>\n      <p>Price: {price}$</p>\n      <p>{description}</p>\n      <button onClick={(e) => addRobotToShoppingCardList({type, price, addRobotToShoppingCardList})}>add to shopping cart</button>\n    </div>\n  );\n};\n\nexport default Robot;\n","import React from \"react\";\nimport styles from \"./ShoppingCart.module.css\";\nimport { FiShoppingCart } from \"react-icons/fi\";\nimport {Robot} from \"../App\";\n\ninterface Props {\n  shoppingCardList: Robot[],\n  removeRobotFromShoppingCardList: (Robot) => void\n}\n\ninterface State {\n  isOpen: boolean;\n}\n\nclass ShoppingCart extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n    };\n  }\n\n  handleClick = (e:React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    console.log(\"e.target \", e.target)\n    console.log(\"e.currentTarget \", e.currentTarget)\n    if((e.target as HTMLElement).nodeName === \"SPAN\"){\n      this.setState({ isOpen: !this.state.isOpen });\n    }\n  }\n\n  getTotalPrice(){\n    let total = 0\n    this.props.shoppingCardList.forEach(robot => {\n      total+= robot.price\n    })\n    return total\n  }\n\n  handleRemove(robot: Robot){\n    this.props.removeRobotFromShoppingCardList(robot)\n  }\n\n  render() {\n    return (\n      <div className={styles.cartContainer}>\n        <button\n          className={styles.button}\n          onClick={this.handleClick}\n        >\n          <FiShoppingCart />\n          <span>购物车 {this.props.shoppingCardList.length} (件)</span>\n          <span>价格： {this.getTotalPrice()}</span>\n        </button>\n        <div\n          className={styles.cartDropDown}\n          style={{\n            display: this.state.isOpen ? \"block\" : \"none\",\n          }}\n        >\n          <ul>\n            {\n              this.props.shoppingCardList.map(robot => {\n                return <li>{robot.type} <button onClick={event => this.handleRemove(robot)}>remove</button></li>\n                }\n              )\n            }\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ShoppingCart;\n","import React from \"react\";\nimport logo from \"./assets/images/logo.svg\";\nimport Robot from \"./components/Robot\";\nimport styles from \"./App.module.css\";\nimport ShoppingCart from \"./components/ShoppingCart\";\n\ninterface Props {}\n\nexport interface Robot{\n    type: string;\n    price: number;\n    description: string;\n}\n\ninterface State {\n  robotGallery: Robot[];\n  count: number;\n  shoppingCartList: Robot[];\n}\n\nclass App extends React.Component<Props, State> {\n\n  // * 生命周期第一阶段： 初始化\n  // 初始化组件 state\n  constructor(props) {\n    super(props);\n    this.state = {\n      robotGallery: [],\n      count: 0,\n      shoppingCartList: []\n    };\n  }\n\n  // 在组件创建好dom元素以后、挂载进页面的时候调用\n  componentDidMount() {\n    fetch(`${process.env.REACT_APP_API_URL}/robots`)\n      .then((response) => response.json())\n      .then((data) => this.setState({ robotGallery: data }));\n  }\n\n  // * 生命周期第二阶段： 更新\n  // 在组件接收到一个新的 prop (更新后)时被调用。\n  // componentWillReceiveProps\n  // state getDerivedStateFromProps(nextProps, prevState){}\n  // shouldComponentUpdate(nextProps, nextState){\n  //   return nextState.some !== this.state.some\n  // }\n  // 组件更新后调用\n  componentDidUpdate(){}\n\n  // * 生命周期第三阶段： 销毁\n  // 组件销毁后调用，\n  // 可以当作析构函数 destructor 来使用\n  componentWillUnmount(){}\n\n  addRobotToShoppingCardList(robot: Robot){\n    // 如果数组中没有这个类型的机器人，就添加。这样可以避免重复添加\n    if(this.state.shoppingCartList.filter(r => r.type === robot.type).length === 0) {\n      // this.state.shoppingCartList.push(robot)\n      console.log(robot, 'add to cart')\n      this.setState({\n        shoppingCartList: [...this.state.shoppingCartList, robot]\n      })\n    }\n  }\n\n  removeRobotFromShoppingCardList(robot: Robot){\n    this.setState({\n      shoppingCartList: this.state.shoppingCartList.filter(r => r.type !== robot.type)\n    })\n    // this.state.shoppingCartList = this.state.shoppingCartList.filter(r => r.type === robot.type)\n  }\n\n  render() {\n    return (\n      <div className={styles.app}>\n        <div className={styles.appHeader}>\n          <h1>正在出售最新款的机器人，速度抢购！</h1>\n        </div>\n        <ShoppingCart shoppingCardList={this.state.shoppingCartList} removeRobotFromShoppingCardList={this.removeRobotFromShoppingCardList.bind(this)}/>\n        <div className={styles.robotList}>\n          {this.state.robotGallery.map((r) => (\n            // 突然想起来传递方法的时候，需要使用bind来绑定一下this，这个问题让我debug了半天，服了。\n            // 尘封的记忆被打开了\n            <Robot type={r.type} price={r.price} description={r.description} addRobotToShoppingCardList={this.addRobotToShoppingCardList.bind(this)}/>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nrequire('dotenv').config()\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1kX79\",\"appHeader\":\"App_appHeader__28RXF\",\"appLogo\":\"App_appLogo__1qg7-\",\"App-logo-spin\":\"App_App-logo-spin__1e7sv\",\"robotList\":\"App_robotList__zTHhD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cartContainer\":\"ShoppingCart_cartContainer__1Gl09\",\"cartDropDown\":\"ShoppingCart_cartDropDown__23j9i\",\"button\":\"ShoppingCart_button__3vzc4\"};"],"sourceRoot":""}